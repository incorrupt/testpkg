name: Build & Publish npm Package

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
    types:
      - labeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted

jobs:
  build:
    name: Build & Test
    if: github.event.action != 'labeled' || github.event.label.name == 'automerge'
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}

      - name: Setup NodeJS environment
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Upload test output
        uses: actions/upload-artifact@v2
        with:
          name: test-output
          path: .coverage

  publish:
    name: Publish to Codecov and/or npm
    needs: [build]
    # Publish to codecov on master and tags / Publish to npm on tags
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}

      - name: Setup NodeJS environment
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Download test output
        uses: actions/download-artifact@v2
        with:
          name: test-output
          path: .coverage

      - name: Publish code coverage stats
        continue-on-error: true
        uses: codecov/codecov-action@v1

      - name: Publish npm package
        if: startsWith(github.ref, 'refs/tags/')
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  automerge:
    name: Auto Merge Pull Request
    #needs: [build]
    if: startsWith(github.event_name, 'pull_req')
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest list of labels
        id: get-labels
        uses: actions/github-script@master
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            })
            console.log(pr.data)
            console.log(pr.data.labels)
            return pr.data.labels

      - env:
          GITHUB_CONTEXT: ${{ steps.get-labels.outputs.result }}
          CONTAIN: ${{ contains(steps.get-labels.outputs.result.*.name, 'automerge') }}
        run: echo "$GITHUB_CONTEXT" & echo "$CONTAIN"
        continue-on-error: true

      - env:
          GITHUB_CONTEXT: ${{ toJson(steps.get-labels.outputs.result) }}
          CONTAIN: ${{ contains(toJson(steps.get-labels.outputs.result.*.name), 'automerge') }}
        run: echo "$GITHUB_CONTEXT" & echo "$CONTAIN"
        continue-on-error: true

      - env:
          GITHUB_CONTEXT: ${{ fromJson(steps.get-labels.outputs.result) }}
          CONTAIN: ${{ contains(fromJson(steps.get-labels.outputs.result).*.name, 'automerge') }}
        run: echo "$GITHUB_CONTEXT" & echo "$CONTAIN"
        continue-on-error: true
      # - name: Merge pull request
      #   uses: pascalgn/automerge-action@v0.8.4
      #   if: contains(steps.get-labels.outputs.result.*.name, 'automerge')
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     MERGE_DELETE_BRANCH: ${{ contains(steps.get-labels.outputs.result.*.name, 'autodeletebranch') }}
  # test:
  #   name: Auto Merge Pull Request
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Get the latest list of labels
  #       id: get-labels
  #       uses: actions/github-script@master
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           console.log(context)
