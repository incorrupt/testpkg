name: Build & Publish NPM Package

on: [push, pull_request]
jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}

      - name: Setup NodeJS environment
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Upload test output
        uses: actions/upload-artifact@v2
        with:
          name: test-output
          path: .coverage

  publish:
    name: Publish
    needs: [build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: ${{ github.head_ref }}

      - name: Setup NodeJS environment
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Download test output
        uses: actions/download-artifact@v2
        with:
          name: test-output
          path: .coverage

      - name: Publish code coverage stats
        continue-on-error: true
        uses: codecov/codecov-action@v1

      - name: Publish NPM package
        if: startsWith(github.ref, 'refs/tags/')
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

  automerge:
    ## This job uses a script to check for the automerge label
    name: Auto Merge Pull Request
    needs: [build]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      # - name: Check if automerge is in the list of labels
      #   uses: actions/github-script@master
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       var pr = github.pulls.get({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: context.event.number
      #       })
      - name: automerge
        uses: pascalgn/automerge-action@v0.8.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_DELETE_BRANCH: true
